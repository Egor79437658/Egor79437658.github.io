// задание - нужно проверить правильность ударений в словах при наличии словаря с правильными ударениями
//сначала вводится число n — количество слов в словаре. Все слова состоят из маленьких и заглавных латинских букв.
//В каждом слове заглавная ровно одна буква — та, на которую попадает ударение. Слова в словаре расположены в алфавитном порядке.
//Если есть несколько возможностей расстановки ударения в одном и том же слове, то эти варианты в словаре идут в произвольном порядке.
//Далее идет упражнение, представляющее собой строку текста.Строка состоит из слов, которые разделяются между собой ровно одним пробелом.
//Все слова состоят из маленьких и заглавных латинских букв (заглавными обозначены те буквы, на которые поставлено ударение).
// В данных словах может быть поставлено более одного ударения или ни одного ударения вовсе.
//Если то, как поставлено ударение, соответствует одному из приведенных в словаре вариантов, считать это как правильную расстановку ударения, а если не соответствует, то как ошибку.
//Если слова нет в словаре, то верным считается слово в котором стоит ровно одно ударение
//вывод - число ошибок в тексте.
#include <iostream>
#include <string>
#include <set>
#include <vector>

using namespace std;

string lower(string s) {//функция для создания слов с одним регистром
	string new_s = "";
	for (auto c : s) {
		if (c >= 'A' && c <= 'Z') {
			int temp = c - 'A';
			c = 'a' + temp;
		}
		new_s += c;
	}
	return new_s;

}

int main() {
	int n;
	cin >> n;
	set <string> a;
	set <string> b;
	for (int i = 0; i < n; i++) {//чтение словаря
		string s;
		cin >> s;
		a.insert(s);
		b.insert(lower(s));//создание слов с одним регистром
	}
	string line, word = "";
	cin >> ws;
	getline(cin, line);//чтение упражнения
	if (line.empty()) {// если стора пуста
		cout << 0;
		return 0;
	}
	line += ' ';
	int counter = 0, counter_of_upper = 0;
	for (auto c : line) {
		if (c != ' ') {//чтение слов
			word += c;
			if (c >= 'A' && c <= 'Z') {
				counter_of_upper += 1;// количество ударений в слове
			}
		}
		else {//проверка на наличие слов в словаре
			if (a.find(word) == a.end()) {//если в слове больше одного ударения или ударение стоит неправильно

				if (b.find(lower(word)) != b.end() || counter_of_upper != 1) { counter += 1; }// Если слова нет в словаре или количесто ударений больше одного
			}
			word = "";
			counter_of_upper = 0;
		}
	}
	cout << counter;// вывод количества ошибок
	return 0;
}